查看cuda版本:cat /usr/local/cuda/version.txt
查看cudann版本:cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2

cuda_Event_t :cuda获得时间戳函数

cudaEventSynchronize:细粒度等待所有线程任务完成

Thrust开源库的简介是“code at speed of light”。光速代码的实现听上去太过夸张，但是thrust在cuda硬件加速中确实有着无比强大的功能。
Thrust是并行算法和数据结构的基于GPU CUDA的C++库。Thrust主要通过管理系统底层的功能比如memory access（内存获取）和memory allocation（内存分配）来实现加速，使得工程师们在GPU编程的环境下能更focus在算法的设计上。
Thrust的最主要特征是实现了几种数据结构和算法的高速并行计算（high performance heterogeneous parallel computing）。
例如sort，reduce，scan等。PS. 安装CUDA tooltik的时候会自动将thrust的头文件加入标准CUDA文件路径。因此应用thrust库并不需要额外安装手续。

Thrust提供了大量的函数类型集合，包括：转换(transformation)，规约(reduction)，前缀求和(prefix sum)，再排序(reordering)，排序(sorting)。
Thrust并不是传统意义上的函数库，因为它的所有内容都在所包含的头文件中。
因此，要避免包含所有的文件。只要包含需要的头文件就行了。

#include <thrust/host_vector.h>
#include <thrust/device_vector.h>:可以直接在GPU中创建对象,直接使用GPU
device_vector的创建一维数组的方式:
a. 	thrust::device_vector<double> *data[1];
   	data[0] = new thrust::device_vector<double> (n);//开辟大小是n的设备数组
b. 	thrust::device_vector<double> *data[1];
	double dataset[] = ...;
	data[0] = new thrust::device_vector<double>(dataset,dateset+p);//p是dataset的最大偏移量


Thrust官方使用介绍:https://docs.nvidia.com/cuda/thrust/

获取本机可用的GPU个数:
	int count;
	cudaGetDeviceCount(&count);






